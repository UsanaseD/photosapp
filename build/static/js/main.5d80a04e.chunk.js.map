{"version":3,"sources":["Components/photoApp/photoView.js","reportWebVitals.js","index.js"],"names":["photoView","props","getPhotosOfAnAlbum","event","preventDefault","album","target","elements","axios","value","then","response","ad","data","setState","titles","catch","error","console","log","state","className","onSubmit","this","bind","type","placeholder","id","scope","sort","a","b","map","pic","index","title","src","thumbnailUrl","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAkGeA,E,kDA3Fb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAQNC,mBAAqB,SAACC,GAErBA,EAAMC,iBACP,IAEEC,EAFWF,EAAMG,OAGVC,SADPF,MAEMG,IAAM,+CAAD,OAAgDH,EAAMI,MAAtD,YACJC,MAAK,SAAAC,GACF,IAAIC,EAAMD,EAASE,KACnB,EAAKC,SAAS,CAAEC,OAAQH,OAE3BI,OAAM,SAAAC,GACPC,QAAQC,IAAKF,OApBnB,EAAKG,MAAQ,CACTL,OAAQ,IAHG,E,0CA2BnB,WACE,OACI,qBAAKM,UAAU,cAAf,SACA,qBAAKA,UAAU,mBAAf,SACQ,qBAAKA,UAAU,8BAAf,SACA,uBAAMC,SAAYC,KAAKrB,mBAAmBsB,KAAKD,MAA/C,UACI,sBAAKF,UAAU,mBAAf,UAEI,uBAAOI,KAAK,SACRJ,UAAU,eACVK,YAAY,mBACZ,aAAW,uBACX,mBAAiB,eACjBC,GAAG,UAEf,qBAAKN,UAAU,qBAAf,SACgB,wBACIA,UAAU,4BACVI,KAAK,SACLhB,MAAM,SAHV,yCAShB,qBAAKY,UAAU,SAAf,SACA,8BACM,wBACEA,UAAU,yBACEM,GAAG,oBACHL,SAAUC,KAAKrB,mBAH7B,UAKA,gCACE,+BACE,oBAAI0B,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,6BAGHL,KAAKH,MAAML,OACTc,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEH,GAAKI,EAAEJ,MACZK,KAAI,SAACC,EAAKC,GACjB,OACF,gCACE,mCACM,+BACA,oBAAIN,MAAM,MAAV,SAAiBM,EAAQ,IACf,mCAAMD,EAAIE,SACpB,oCAAM,qBAAKC,IAAKH,EAAII,eAApB,qC,GA5EZC,aCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5d80a04e.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { Component} from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./photoView.css\";\nimport axios from \"axios\";\n\nclass photoView extends Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n          titles: [],\n      };\n\n  }\n\n    //   get data related to one album by id\n    getPhotosOfAnAlbum = (event) => {\n\n     event.preventDefault();\n    const form = event.target;\n    const {\n      album\n    } = form.elements;\n            axios(`https://jsonplaceholder.typicode.com/albums/${album.value}/photos`)\n            .then(response => {\n                var ad = (response.data)\n                this.setState({ titles: ad })\n            })\n            .catch(error => {\n            console.log( error);\n            })\n  }\n\n\n  render() {\n    return (\n        <div className=\"t-container\">\n        <div className=\"h-100 w-100 py-2\">\n                <div className=\"col-12 tab_container-stock \">\n                <form onSubmit = {this.getPhotosOfAnAlbum.bind(this)}>\n                    <div className=\"input-group mb-3\">\n\n                        <input type=\"number\"\n                            className=\"form-control\"\n                            placeholder=\"Enter Album's id\"\n                            aria-label=\"Recipient's username\"\n                            aria-describedby=\"basic-addon2\"\n                            id=\"album\"\n                        />\n                <div className=\"input-group-append\">\n                                <button\n                                    className=\"btn btn-outline-secondary\"\n                                    type=\"submit\"\n                                    value=\"submit\"\n                                >\n                                    Get Album Photos By Id\n                                </button>\n                        </div>\n                    </div>\n                <div className=\"col-12\">\n                <div>\n                      <table\n                        className=\"table table-borderless\"\n                                    id=\"TableForSuppliers\"\n                                    onSubmit={this.getPhotosOfAnAlbum}\n                                    >\n                      <thead>\n                        <tr>\n                          <th scope=\"col\">#</th>\n                          <th scope=\"col\">Title</th>\n                          <th scope=\"col\">Thumbnails</th>\n                        </tr>\n                      </thead>\n                      {this.state.titles\n                        .sort((a, b) => a.id - b.id)\n                                    .map((pic, index) => {\n                              return (\n                            <tbody>\n                              <>\n                                    <tr>\n                                    <th scope=\"row\">{index + 1}</th>\n                                              <td> {pic.title}</td>\n                                    <td>  <img src={pic.thumbnailUrl}/> </td>\n                                  </tr>\n                              </>\n                         </tbody>\n                         );\n                        })}\n                    </table>\n             </div>\n            </div>\n         </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default photoView;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/photoApp/photoView';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}